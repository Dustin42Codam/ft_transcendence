version: '3.7'

services:

  frontend:
    restart: always
    container_name: frontend
    hostname: frontend
    build:
      context: ${PWD}/frontend/my-app
      dockerfile: Dockerfile-dev
    volumes:
      - '${PWD}/frontend/my-app:/app/'
      - '/app/node_modules'
    ports:
      - '8081:8080'
    networks:
      - ft_trance
    healthcheck:
        test: wget --no-verbose --tries=1 --spider http://localhost:8080 || exit 1
        interval: 20s
        retries: 1 
        start_period: 10s
        timeout: 10s

  backend:
    restart: always
    container_name: backend
    hostname: backend
    build:
      context: ${PWD}/backend/my-app
      dockerfile: Dockerfile-dev
    volumes:
      - '${PWD}/backend/my-app:/app/'
      - '/app/node_modules'
    ports:
      - '3000:3000'
    networks:
      - ft_trance
    healthcheck:
        test: wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1
        interval: 20s
        retries: 1 
        start_period: 10s
        timeout: 10s

  postgres:
    restart: always
    user: "root:root"
    container_name: postgres
    hostname: postgres
    image: postgres:latest
    volumes:
      - '${PWD}/postgres_vol:/var/lib/postgresql/data'
    networks:
      - ft_trance
    environment:
      POSTGRES_PASSWORD:    ${POSTGRES_PASSWORD}
      POSTGRES_USER:        ${POSTGRES_USER}
      POSTGRES_DB:          ${POSTGRES_DB}
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
        interval: 10s
        retries: 2
        start_period: 20s
        timeout: 10s

  pgAdmin4:
    restart: always
    container_name: pgAdmin4
    hostname: pgAdmin4
    image: dpage/pgadmin4
    volumes:
      - '${PWD}/postgres_vol:/var/lib/mysql'
    ports:
      - "8082:80"
    networks:
      - ft_trance
    environment:
      PGADMIN_DEFAULT_EMAIL:    ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    healthcheck:
        test: wget --no-verbose --tries=1 --spider localhost:80 || exit 1
        interval: 10s
        retries: 2
        start_period: 60s
        timeout: 10s

networks:
  ft_trance:
    driver: bridge
    name: ft_trance
