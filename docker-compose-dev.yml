version: '2.4'

services:
  backend:
    hostname: backend
    build:
      context: ./backend
      target: dev
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/src/:/backend/src/
  frontend:
    hostname: frontend
    build:
      context: ./frontend
      target: dev
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./frontend/src/:/frontend/src/
  pgAdmin4:
    restart: always
    container_name: pgAdmin4
    hostname: pgAdmin4
    image: dpage/pgadmin4
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8082:80
    environment:
      PGADMIN_DEFAULT_EMAIL:    ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    healthcheck:
        test: wget --no-verbose --tries=1 --spider localhost:80 || exit 1
        interval: 10s
        retries: 2
        start_period: 60s
        timeout: 10s
  postgres:
    restart: always
    container_name: postgres
    hostname: postgres
    image: postgres:latest
    volumes:
      - ./postgres_vol/:/var/lib/postgresql/data:delegated
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - ft_trance
    environment:
      POSTGRES_PASSWORD:    ${POSTGRES_PASSWORD}
      POSTGRES_USER:        ${POSTGRES_USER}
      POSTGRES_DB:          ${POSTGRES_DB}
    healthcheck:
        test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
        interval: 10s
        retries: 2
        start_period: 20s
        timeout: 10s

networks:
  ft_trance:
    driver: bridge
    name: ft_trance
