
todo:

	-	create a component for dm chats
	-	rewrite seperate wrapper in Chat component
	-	check error handling in user edit
	-	bug when splittin direct / group chats in navbar
		into 2 seperate components ????
	->	add toasts for every store/api event
		->	add to redux
			->	chat delete
	-	Redux store
		-	add current_chat_member slices
		-	sync with sockets?
		-	place every manual fetch into redux slice
	->	Chat
		-	auto scroll to bottom
		-	chat user list
			-	add avatar to user cards
		-	chat header
			+ create sticky chat navbar
			-	make chat header responsive to screen size
				(see chat input box)
		-	creating chats
			-	add toasts with server response
				+	on error
				-	on success
		-	update (current) chat
			-	add update chat to redux slice
		-	sync with redux?
		-	fetch current chat members

		Bug:
			-	create a channel but not set as owner
				-> FIX replace request.session.user_id
				-> return this.chatroomService.createChatroom(users, createChatroom, Number(request.session.user_id));

		+	delete chat
			+	only as owner???

		+	add user to chat
			+	admin can add another user to chat
			+	invalid or empty user name displays error
			+	only admins or owner can add new users
			+	check if user is already in a chat room

		->	ban user
			->	create button
			-	test as owner
			-	test as admin
			-	test as user
		-	unban user
		->	set others as admin
			->	authorized
			-	unauthorized
		->	unset others as admin
			->	authorized
			-	unauthorized
		-	mute user
			-	minutes
		-	unmute user
		-	ping pong invite
		-	leave channel
			-	set other user as channel owner
			-	channel owner?
			-	test each if statement
				in controller with requests
				from the frontend

		-	remove user from chat ???
			-	authorized
			-	unauthorized
			-	empty name
			-	invalid name

bugs:
		-	joinable/groupchats redux bug
		-	chatroom long list

notes:
	-	don't forget that also the name of the chatroom should be able to change
		-	and maybe also the password for Protected chatrooms
	
	-	ChatLobby?
	-	ChatCreate?
	-	ChatTable?


toasties:

toast.(``, {
	position: "top-center",
	autoClose: 5000,
	hideProgressBar: false,
	closeOnClick: true,
	pauseOnHover: true,
	draggable: true,
	progress: undefined,
	theme: "colored",
	});
toast.warn(``, {
	type: "success",
	isLoading: false,
	position: "top-right",
	autoClose: 5000,
	hideProgressBar: false,
	closeOnClick: true,
	pauseOnHover: true,
	draggable: true,
	progress: undefined,
	theme: "colored",
});
toast.info(``, {
	position: "top-right",
	autoClose: 5000,
	hideProgressBar: false,
	closeOnClick: true,
	pauseOnHover: true,
	draggable: true,
	progress: undefined,
	theme: "colored",
	});
toast.update(id, {
	render: `${newUserName} joined the chat!`,
	type: "success",
	isLoading: false,
	position: "top-right",
	autoClose: 5000,
	hideProgressBar: false,
	closeOnClick: true,
	pauseOnHover: true,
	draggable: true,
	progress: undefined,
	theme: "colored",
}); 
