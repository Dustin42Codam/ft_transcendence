
version: "3"

services:

  frontend:
    restart: always
    command: sh -c "npm ci && npm install && npm run dev"
    working_dir: /home/node
    container_name: frontend
    hostname: frontend
    image: node:current-alpine3.16
    ports:
     - "5173:5173"
    volumes:
     - frontend_vol:/home/node
    networks:
     - ft_trance

  backend:
    restart: always
    command: sh -c "npm install && npm run start:dev"
    working_dir: /home/node
    container_name: backend
    hostname: backend
    image: node:current-alpine3.16
    ports:
      - "3000:3000"
    volumes:
      - backend_vol:/home/node
    networks:
      - ft_trance
      
  postgres:
    restart: always
    user: "root:root"
    container_name: postgres
    hostname: postgres
    image: postgres:latest
    volumes:
      - postgres_sql_vol:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD:    ${POSTGRES_PASSWORD}
      POSTGRES_USER:        ${POSTGRES_USER}
      POSTGRES_DB:          ${POSTGRES_DB}
    networks:
      - ft_trance
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "user", "-d", "ft_trance"]
        interval: 10s
        retries: 2
        start_period: 20s
        timeout: 10s

  pgAdmin4:
    restart: always
    container_name: pgAdmin4
    hostname: pgAdmin4
    image: dpage/pgadmin4
    volumes:
      - postgres_sql_vol:/var/lib/mysql
    networks:
      - ft_trance
    ports:
      - "8082:80"
    environment:
      PGADMIN_DEFAULT_EMAIL:    ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    healthcheck:
        test: wget --no-verbose --tries=1 --spider localhost:80 || exit 1
        interval: 10s
        retries: 2 
        start_period: 60s
        timeout: 10s

networks:
  ft_trance:
    driver: bridge
    name: ft_trance

volumes:
  postgres_sql_vol:
    driver: local
    name: postgres_sql_vol
    driver_opts:
      type: none
      o: bind
      device: '${PWD}/postgres_vol'
  backend_vol:
    driver: local
    name: backend_vol
    driver_opts:
      type: none
      o: bind
      device: '${PWD}/backend'
  frontend_vol:
    driver: local
    name: frontend_vol
    driver_opts:
      type: none
      o: bind
      device: '${PWD}/frontend'
